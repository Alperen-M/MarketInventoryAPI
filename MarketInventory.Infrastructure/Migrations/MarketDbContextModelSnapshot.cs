// <auto-generated />
using System;
using MarketInventory.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketInventory.Infrastructure.Migrations
{
    [DbContext(typeof(MarketDbContext))]
    partial class MarketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MarketInventory.Domain.Entities.Barkod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrunBirimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("UrunId");

                    b.ToTable("Barkodlar");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.Birim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Carpan")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Birimler");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciTuruId")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("KullaniciTuruId");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.KullaniciTuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KullaniciTurleri");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.StokHareketi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("HareketTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Miktar")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UrunId");

                    b.ToTable("StokHareketleri");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tur")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.UrunFiyat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("SonTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunFiyatlar");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.Barkod", b =>
                {
                    b.HasOne("MarketInventory.Domain.Entities.Birim", "Birim")
                        .WithMany("Barkodlar")
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MarketInventory.Domain.Entities.Kullanici", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MarketInventory.Domain.Entities.Urun", "Urun")
                        .WithMany("Barkodlar")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Birim");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.Birim", b =>
                {
                    b.HasOne("MarketInventory.Domain.Entities.Kullanici", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.Kullanici", b =>
                {
                    b.HasOne("MarketInventory.Domain.Entities.Kullanici", "CreatedByUser")
                        .WithMany("CreatedUsers")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MarketInventory.Domain.Entities.KullaniciTuru", "KullaniciTuru")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("KullaniciTuruId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("KullaniciTuru");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.StokHareketi", b =>
                {
                    b.HasOne("MarketInventory.Domain.Entities.Birim", "Birim")
                        .WithMany("StokHareketleri")
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MarketInventory.Domain.Entities.Kullanici", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MarketInventory.Domain.Entities.Urun", "Urun")
                        .WithMany("StokHareketleri")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Birim");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.Urun", b =>
                {
                    b.HasOne("MarketInventory.Domain.Entities.Birim", "Birim")
                        .WithMany("Urunler")
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MarketInventory.Domain.Entities.Kullanici", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Birim");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.UrunFiyat", b =>
                {
                    b.HasOne("MarketInventory.Domain.Entities.Kullanici", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MarketInventory.Domain.Entities.Urun", "Urun")
                        .WithMany("Fiyatlar")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.Birim", b =>
                {
                    b.Navigation("Barkodlar");

                    b.Navigation("StokHareketleri");

                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.Kullanici", b =>
                {
                    b.Navigation("CreatedUsers");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.KullaniciTuru", b =>
                {
                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("MarketInventory.Domain.Entities.Urun", b =>
                {
                    b.Navigation("Barkodlar");

                    b.Navigation("Fiyatlar");

                    b.Navigation("StokHareketleri");
                });
#pragma warning restore 612, 618
        }
    }
}
